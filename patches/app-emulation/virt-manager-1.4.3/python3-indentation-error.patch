diff --git a/virtManager/connection.py b/virtManager/connection.py
index 820322e..d2b2a0b 100644
--- a/virtManager/connection.py
+++ b/virtManager/connection.py
@@ -910,28 +910,28 @@ class vmmConnection(vmmGObject):
                 libvirt_error_code = exc.get_error_code()
                 libvirt_error_message = exc.get_error_message()
 
-        if (libvirt_error_code ==
-            getattr(libvirt, "VIR_ERR_AUTH_CANCELLED", None)):
-            logging.debug("User cancelled auth, not raising any error.")
-            return False, None
-
-        if (libvirt_error_code == libvirt.VIR_ERR_AUTH_FAILED and
-            "not authorized" in libvirt_error_message.lower()):
-            logging.debug("Looks like we might have failed policykit "
-                          "auth. Checking to see if we have a valid "
-                          "console session")
-            if (not self.is_remote() and
-                not connectauth.do_we_have_session()):
-                warnconsole = True
-
-        if (libvirt_error_code == libvirt.VIR_ERR_AUTH_FAILED and
-            "GSSAPI Error" in libvirt_error_message and
-            "No credentials cache found" in libvirt_error_message):
-            if retry_for_tgt and connectauth.acquire_tgt():
-                self._do_open(retry_for_tgt=False)
-
-        connectError = (str(exc), tb, warnconsole)
-        return False, connectError
+                if (libvirt_error_code ==
+                    getattr(libvirt, "VIR_ERR_AUTH_CANCELLED", None)):
+                    logging.debug("User cancelled auth, not raising any error.")
+                    return False, None
+
+                if (libvirt_error_code == libvirt.VIR_ERR_AUTH_FAILED and
+                    "not authorized" in libvirt_error_message.lower()):
+                    logging.debug("Looks like we might have failed policykit "
+                                  "auth. Checking to see if we have a valid "
+                                  "console session")
+                    if (not self.is_remote() and
+                        not connectauth.do_we_have_session()):
+                        warnconsole = True
+
+                if (libvirt_error_code == libvirt.VIR_ERR_AUTH_FAILED and
+                    "GSSAPI Error" in libvirt_error_message and
+                    "No credentials cache found" in libvirt_error_message):
+                    if retry_for_tgt and connectauth.acquire_tgt():
+                        self._do_open(retry_for_tgt=False)
+
+            connectError = (str(exc), tb, warnconsole)
+            return False, connectError
 
     def _populate_initial_state(self):
         logging.debug("libvirt version=%s",
